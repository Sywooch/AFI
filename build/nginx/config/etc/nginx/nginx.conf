
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format logstash_json '{ "@timestamp": "$time_iso8601", '
                         '"@fields": { '
                         '"remote_addr": "$remote_addr", '
                         '"remote_user": "$remote_user", '
                         '"body_bytes_sent": "$body_bytes_sent", '
                         '"request_time": "$request_time", '
                         '"status": "$status", '
                         '"request": "$request", '
                         '"request_method": "$request_method", '
                         '"http_x_forwarded_for": "$http_x_forwarded_for", '
                         '"http_referrer": "$http_referer", '
                         '"http_user_agent": "$http_user_agent" } }';

    access_log  /var/log/nginx/access.log  logstash_json;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;
    ssl_stapling on;
    ssl_stapling_verify on;
    #resolver <IP DNS resolver>;
    ssl_dhparam /etc/nginx/dhparam/dhparam.pem;

    # gzip should not be used with ssl
    gzip off;

    # HTTP server
    server {
        charset utf-8;
        client_max_body_size 512M;
        server_name afi.ink;

        listen 80 default_server;

        root        /app/web;
        index       index.php;

        # ACME webroot for https://github.com/bringnow/docker-nginx-letsencrypt
        location /.well-known/acme-challenge {
            alias /var/acme-webroot/.well-known/acme-challenge;
            location ~ /.well-known/acme-challenge/(.*) {
                add_header Content-Type application/jose+json;
            }
        }

        # redirect all traffic to https
        # note: if uncommenting this, comment out anything further in this server definition
        #location / {
        #    return 301 https://$host$request_uri;
        #}

        # Redirect everything that isn't a real file to index.php
        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        # uncomment to avoid processing of calls to non-existing static files by Yii
        location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
            try_files $uri =404;
        }

        # send php files to phpfpm
        location ~ \.php$ {
            include /etc/nginx/fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            fastcgi_pass php:9000;
            try_files $uri =404;
        }

        # print-spool
        location /print-spool {
            index index.html;
            try_files $uri $uri/ /index.php?$args;
        }

        # deny secret files
        location ~ /\.(ht|svn|git) {
            deny all;
        }
    }

    # HTTPS server
    server {
        charset utf-8;
        client_max_body_size 512M;

        server_name afi.ink;
        listen 443 ssl default_server;
        root        /app/web;
        index       index.php;

        # setup SSL
        ssl_certificate /etc/letsencrypt/live/afi.ink/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/afi.ink/privkey.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains" always;

        # redirect everything that isn't a real file to index.php
        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        # avoid processing of calls to non-existing static files by Yii
        location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
            try_files $uri =404;
        }

        # send php files to phpfpm
        location ~ \.php$ {
            include /etc/nginx/fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            fastcgi_pass php:9000;
            try_files $uri =404;
        }

        # print-spool
        location /print-spool {
            index index.html;
            try_files $uri $uri/ /index.php?$args;
        }

        # deny secret files
        location ~ /\.(ht|svn|git) {
            deny all;
        }
    }

    # PHPMyAdmin
    upstream pma {
        server phpmyadmin:80;
    }
    server {
        listen 80;
        server_name pma.afi.ink pma2.afi.ink pma-dev.afi.ink;
        # provide the ACME webroot
        location /.well-known/acme-challenge {
            alias /var/acme-webroot/.well-known/acme-challenge;
            location ~ /.well-known/acme-challenge/(.*) {
                add_header Content-Type application/jose+json;
            }
        }
        # send php files to phpmyadmin container
        location / {
            proxy_pass         http://pma;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
    server {
        listen 443 ssl;
        server_name pma.afi.ink pma2.afi.ink pma-dev.afi.ink;
        # setup SSL
        ssl_certificate /etc/letsencrypt/live/afi.ink/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/afi.ink/privkey.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains" always;
        # send php files to phpmyadmin container
        location / {
            proxy_pass         http://pma;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
